Shemat opisu:

ID_testu. Opis czynność -> Oczekiwany wynik operacji (status zwracany przez funkcję)

W przypadku gdy opis czynności obejmuje więcej niż jedną operację, status dotyczy wyniku ostatniej operacji.

I. MAKE

1. Utworzenie sfs o bpi=5 -> Operacja udana, powstaje nowy sfs (SFS_OK)
2. Utworzenie sfs o bpi=100000 -> Przycięcie liczby bloków bo nie może być więcej niż wynika z adresowania typem unsigned short, powstaje nowy sfs (SFS_OK)
3. Utworzenie sfs o bpi=-1 -> Niepowodzenie (SFS_BAD_OPTION)

II. MOUNT/UMOUNT

  Uwagi:
  Szczegółowe testy będą po integracji simplefs z modułem fifo.

III. MKDIR
 
  Uwagi:
  Testy 1-3 nalezy wykonywac po udanym zamontowaniu pliku sfs (po wykonaniu simplefs_mount()).
  Po każdym teście należy sprawdzić zawartość superbloku, map inodów i bloków, wykorzystane inody i zawartości katalogów.

1. Utworzenie nowego katalogu w katalogu root -> (SFS_OK)
2. Utworzenie nowego katalogu w innym katalogu -> (SFS_OK)
3. Utworzenie istniejącego katalogu -> (SFS_EEXISTS)

IV. OPEN/CREAT/CLOSE

  Uwagi:
  Testy 1-28 nalezy wykonywac po udanym zamontowaniu pliku sfs (po wykonaniu simplefs_mount()).
  Pliki otworzone w testach 1-24 należy zamykać na koniec każdego testu aby uniknąć śmieci w folderze temp.
  Po każdym teście należy sprawdzić zawartość superbloku, map inodów i bloków, wykorzystane inody i zawartości katalogów.

1. Utworzenie nieistniejącego pliku w katalogu root  -> (deskryptor pliku)
2. Utworzenie nieistniejącego pliku w innym katalogu -> (deskryptor pliku)
3. Utworzenie istniejącego pliku w katalogu root     -> (deskryptor pliku)
4. Utworzenie istniejącego pliku w innym katalogu    -> (deskryptor pliku)
5. Otworzenie istniejącego pliku w katalogu root     -> (deskryptor pliku)
6. Otworzenie istniejącego pliku w innym katalogu    -> (deskryptor pliku)
7. Otworzenie istniejącego pliku z podaną niepoprawną opcją -> (SFS_BAD_OPTION)
8. Otworzenie istniejącego pliku bez wyspecyfikowania trybu dostępu -> (SFS_BAD_OPTION)
9. Utworzenie nieistniejącego pliku w zapełnionym katalogu -> (SFS_DIR_FULL)
10. Utworzenie nieistniejącego pliku po zajęciu wszystkich 512 inodów -> (SFS_TO_MANY_FILES)
11. Utworzenie pliku w trybie RDONLY i otwarcie w trybie RDONLY -> (deskryptor pliku)
12. Utworzenie pliku w trybie RDONLY i otwarcie w trybie WRONLY -> (SFS_EACCESS)
13. Utworzenie pliku w trybie RDONLY i otwarcie w trybie RDWR   -> (SFS_EACCESS)
14. Utworzenie pliku w trybie WRONLY i otwarcie w trybie RDONLY -> (SFS_EACCESS)
15. Utworzenie pliku w trybie WRONLY i otwarcie w trybie WRONLY -> (deskryptor pliku)
16. Utworzenie pliku w trybie WRONLY i otwarcie w trybie RDWR   -> (SFS_EACCESS)
17. Utworzenie pliku w trybie RDWR   i otwarcie w trybie RDONLY -> (deskryptor pliku)
18. Utworzenie pliku w trybie RDWR   i otwarcie w trybie WRONLY -> (deskryptor pliku)
19. Utworzenie pliku w trybie RDWR   i otwarcie w trybie RDWR   -> (deskryptor pliku)
20. Dwukrotne otworzenie istniejącego pliku -> (SFS_EOPENED)
21. Uwtorzenie nieistniejącego pliku z nazwą o długości 50 znaków -> (SFS_NAME_TO_LONG)
22. Uwtorzenie nieistniejącego pliku z wyspecyfikowaniem w ścieżce nieistniejącego katalogu -> (SFS_BAD_PATH)
23. Otworzenie niestniejącego pliku -> (SFS_NOT_FOUND)
24. Utworzenie niestniejącego pliku z pustą nazwą ->(SFS_BAD_NAME)
25. Otworzenie istniejacego pliku i zamkniecie go -> (SFS_OK)
26. Zamkniecie pliku o deskryptorze określonym liczbą ujemną -> (SFS_BAD_DESC)
27. Zamkniecie nieotworzonego pliku, który nie jest aktualnie otworzony przez zaden inny proces -> (SFS_EDESC)
28. Zamknięcie nieotworzonego pliku, który jest aktualnie otworzony przez inny proces -> (SFS_ECLOSED)
29. Odmontowanie pliku sfs i otworzenie istniejacego pliku -> (SFS_VDFAULT)

V. READ/WRITE/LSEEK

  Uwagi:
  Testy 1-16 nalezy wykonywac po udanym zamontowaniu pliku sfs (po wykonaniu simplefs_mount()).
  Przy każdym teście należy także wcześniej otworzyć plik, a po wykonaniu odczytu/zapisu/repozycjonowania zamknąć go.
  Po każdym teście należy sprawdzić zawartość superbloku, map bloków i rozmiary plików.
  (ze szczególnym naciskiem na zajęte bloki przed i po wykonaniu operacji).
  Należy dokładnie sprawdzić odczytywaną i zapisywaną zawartość oraz kontrolować pozycję z której odbywa się odczyt/zapis

1. Odczyt pustego pliku -> (SFS_EOF)
2. Odczyt pliku o rozmiarze do 28672 B -> (liczba odczytanych bajtów)
3. Odczyt pliku o rozmiarze ponad 28672 B (odczyt z bloków pośrednich)-> (liczba odczytanych bajtów)
4. Odczyt z pliku więcej bajtów niż wynosi rozmiar pliku -> (liczba odczytanych bajtów)
5. Odczyt z pliku otworzonego w trybie WRONLY -> (SFS_EACCESS)
6. Zapis do pustego pliku -> (liczba zapisanych bajtów)
7. Zapis do pliku mniej niż 28672 B -> (liczba zapisanych bajtów)
8. Zapis do pliku ponad 28672 B (wykorzystanie bloków pośrednich)-> (liczba zapisanych bajtów)
9. Zapis do pliku ponad 8417280 B (więcej niż wynosi maksymalny rozmar pliku) -> (liczba zapisanych bajtów)
10. Zapis do pliku otworzonego w trybie tylko do odczytu -> (SFS_EACCESS)
11. Ustawienie pozycji w pliku względem początku pliku i próbny odczyt/zapis -> (aktualna pozycja w pliku)
12. Ustawienie pozycji w pliku względem aktualnej pozycji w pliku i próbny odczyt/zapis -> (aktualna pozycja w pliku)
13. Ustawienie pozycji w pliku względem końca pliku i próbny odczyt/zapis -> (aktualna pozycja w pliku)
14. Ustawienie pozycji w pliku na < 0 i próbny odczyt/zapis -> (aktualna pozycja w pliku)
15. Ustawienie pozycji w pliku na > rozmiar pliku i próbny odczyt/zapis -> (aktualna pozycja w pliku)
16. Ustawienie pozycji w pliku z parametrem innym niż SET, CUR oraz END -> (SFS_BAD_OPTION)

VI. UNLINK

  Uwagi:
  Testy 1-8 nalezy wykonywac po udanym zamontowaniu pliku sfs (po wykonaniu simplefs_mount()).
  Po każdym teście należy sprawdzić zawartość superbloku, map inodów i bloków, wykorzystane inody i zawartości katalogów
  (ze szczególnym naciskiem na zajęte bloki, inody i zawartości katalogów przed i po wykonaniu operacji).

1. Usunięcie istniejącego pustego pliku -> (SFS_OK)
2. Usunięcie istniejącego pliku z wykorzystywanymi blokami bezposrednimi (rozmiar <= 28672 B) -> (SFS_OK)
3. Usunięcie istniejącego pliku z wykorzystywanymi blokami posrednimi (rozmiar > 28672 B) -> (SFS_OK)
4. Usunięcie niestniejącego pliku -> (SFS_NOT_FOUND)
5. Usunięcie nieistniejącego katalogu -> (SFS_NOT_FOUND)
6. Usunięcie katalogu root -> (SFS_BAD_NAME)
7. Usunięcie istniejącego pustego katalogu -> (SFS_OK)
8. Usunięcie istniejącego katalogu zawierajacego pliki puste, pliki z zaalokowanymi blokami bezpośrednimi i pośrednimi, podkatalogi -> (SFS_OK) 

























































